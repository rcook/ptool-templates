description: Simple Elm frontend with Haskell/Servant backend

template-values:
  elm_copyright: |
    --------------------------------------------------
    -- Copyright (C) 2017, All rights reserved.
    --------------------------------------------------
  hs_copyright: |
    --------------------------------------------------
    -- Copyright (C) 2017, All rights reserved.
    --------------------------------------------------
  app_dependencies:
    - aeson
    - optparse-applicative
    - servant
    - servant-server
    - template-haskell
    - time
    - vcs-revision
    - wai
    - wai-cors
    - wai-logger
    - warp
  app_other_module_suffixes:
    - API
    - App
    - CommandLine
    - Types
    - Util
    - VersionInfo
  test_dependencies: []

template-filters:
  to_app_module_names: "lambda ctx, ms: map(lambda m: \"{}App.{}\".format(ctx.get(\"module_name\"), m), ms)"
  to_env_project_name: "lambda ctx, s: \"_\".join(map(lambda s: s.upper(), ctx.tokenize(s)))"
  to_module_name: "lambda ctx, s: \"\".join(map(lambda s: s.title(), ctx.tokenize(s)))"
  to_paths_module_name: "lambda ctx, s: \"Paths_{}\".format(\"_\".join(map(lambda s: s.lower(), ctx.tokenize(s))))"

template-globals:
  env_project_name: "{{ project_name | to_env_project_name }}"
  module_name: "{{ project_name | to_module_name }}"
  paths_module_name: "{{ project_name | to_paths_module_name }}"

files:
- README.md
- path: ../_shared/LICENSE
  output-path: LICENSE
- path: ../_shared/elm/.gitignore
  output-path: frontend/.gitignore
- .env.template
- path: .env.template
  output-path: .env
- .gitignore
- path: elm-package.json
  output-path: frontend/elm-package.json
- path: ../_shared/elm/package.json
  output-path: frontend/package.json
- path: App.elm
  output-path: frontend/src/App.elm
- path: ../_shared/elm/src/favicon.ico
  output-path: frontend/src/favicon.ico
  preprocess: false
- path: ../_shared/elm/src/index.html
  output-path: frontend/src/index.html
- path: index.js
  output-path: frontend/src/index.js
- path: ../_shared/elm/src/logo.svg
  output-path: frontend/src/logo.svg
  preprocess: false
- path: ../_shared/elm/src/main.css
  output-path: frontend/src/main.css
- path: Util.elm
  output-path: frontend/src/{{module_name}}/Util.elm
- path: ../_shared/elm/tests/Tests.elm
  output-path: frontend/tests/Tests.elm
- path: ../_shared/elm/tests/elm-package.json
  output-path: frontend/tests/elm-package.json
- path: ../_shared/haskell/.gitignore
  output-path: backend/.gitignore
- path: stack.yaml
  output-path: backend/stack.yaml
- path: ../_shared/haskell/Setup.hs
  output-path: backend/Setup.hs
- path: ../_shared/haskell/project.cabal
  output-path: backend/{{project_name}}.cabal
- path: Main.hs
  output-path: backend/app/Main.hs
- path: API.hs
  output-path: backend/app/{{module_name}}App/API.hs
- path: App.hs
  output-path: backend/app/{{module_name}}App/App.hs
- path: CommandLine.hs
  output-path: backend/app/{{module_name}}App/CommandLine.hs
- path: Types.hs
  output-path: backend/app/{{module_name}}App/Types.hs
- path: Util.hs
  output-path: backend/app/{{module_name}}App/Util.hs
- path: VersionInfo.hs
  output-path: backend/app/{{module_name}}App/VersionInfo.hs
- path: ../_shared/haskell/lib/Project.hs
  output-path: backend/lib/{{module_name}}.hs
- path: ../_shared/haskell/test/Spec.hs
  output-path: backend/test/Spec.hs
- path: ../_shared/haskell/test/ProjectSpec.hs
  output-path: backend/test/{{module_name}}Spec.hs
- script/backend
- script/frontend

commands:
- git init
- git remote add origin {{ project_name | git_url(git_server) }}
- git config user.name "{{author}}"
- git config user.email "{{author_email}}"
- git add .
- git-execute-attribute:
    path: script/backend
- git-execute-attribute:
    path: script/frontend
- git-symlink:
    source-path: LICENSE
    target-path: backend/LICENSE
- git-symlink:
    source-path: README.md
    target-path: backend/README.md
#- cd frontend && npm install
