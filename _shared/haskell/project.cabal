{% set common_ghc_options = "-W\n                                            -Wall\n                                            -Werror=incomplete-patterns\n                                            -Werror=missing-methods\n                                            -fwarn-unused-imports" %}
name:                                       {{project_name}}
version:                                    0.1.0.0
homepage:                                   {{ project_name | git_url(git_server) }}#readme
license:                                    MIT
license-file:                               LICENSE
author:                                     {{author}}
maintainer:                                 {{author_email}}
copyright:                                  {{copyright_year}} {{author}}
category:                                   Command Line
build-type:                                 Simple
cabal-version:                              >= 1.10
extra-source-files:                         README.md

source-repository head
  type:                                     git
  location:                                 {{ project_name | git_clone_url(git_server) }}

library
{%- block common_settings %}
  default-language:                         Haskell2010
  if os(darwin)
    cpp-options:                            -DOS_MACOS
  if os(linux)
    cpp-options:                            -DOS_LINUX
  if os(windows)
    cpp-options:                            -DOS_WINDOWS
{%- endblock %}
  hs-source-dirs:                           lib
  ghc-options:                              {{common_ghc_options}}
{%- for d in lib_dependencies | sort %}
{%- if loop.first %}
  build-depends:                            {{d}}
{%- else %}
                                          , {{d}}
{%- endif -%}
{% endfor %}
{%- for m in ([module_name] + lib_exposed_modules | map("child_module_name") | list) | sort %}
{%- if loop.first %}
  exposed-modules:                          {{m}}
{%- else %}
                                          , {{m}}
{%- endif -%}
{% endfor %}

executable {{project_name}}-app
{{- self.common_settings() }}
  hs-source-dirs:                           app
  main-is:                                  Main.hs
  ghc-options:                              -threaded
                                            -rtsopts
                                            -with-rtsopts=-N
                                            {{common_ghc_options}}
{%- for m in app_other_modules | map("child_module_name", "App") | sort %}
{%- if loop.first %}
  other-modules:                            {{m}}
{%- else %}
                                          , {{m}}
{%- endif -%}
{% endfor %}
{%- for d in ([project_name] + app_dependencies) | sort %}
{%- if loop.first %}
  build-depends:                            {{d}}
{%- else %}
                                          , {{d}}
{%- endif -%}
{% endfor %}

test-suite {{project_name}}-test
  type:                                     exitcode-stdio-1.0
{{- self.common_settings() }}
  hs-source-dirs:                           test
  main-is:                                  Spec.hs
  ghc-options:                              -threaded
                                            -rtsopts
                                            -with-rtsopts=-N
                                            {{common_ghc_options}}
  other-modules:                            {{module_name}}Spec
{%- for d in ([project_name] + test_dependencies) | sort %}
{%- if loop.first %}
  build-depends:                            {{d}}
{%- else %}
                                          , {{d}}
{%- endif -%}
{% endfor %}

{% if codegen_dependencies is defined %}
executable {{project_name}}-codegen
{{- self.common_settings() }}
  hs-source-dirs:                           codegen
  main-is:                                  Main.hs
  ghc-options:                              -threaded -rtsopts -with-rtsopts=-N {{common_ghc_options}}
  other-modules:                            {{module_name}}Codegen.CommandLine
{%- for d in ([project_name] + codegen_dependencies) | sort %}
{%- if loop.first %}
  build-depends:                            {{d}}
{%- else %}
                                          , {{d}}
{%- endif -%}
{% endfor %}
{% endif %}